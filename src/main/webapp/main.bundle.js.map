{"version":3,"sources":["webpack:///./src/app/commons/jenkinsService.service.ts","webpack:///./src/app/job/job.model.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/commons/configService.ts","webpack:///./src/app/job/jobsGroup.model.ts","webpack:///./src/app/job/simpleJob.model.ts","webpack:///./src/app/jobs-basic-view/jobsBasicView.model.ts","webpack:///./src/app/app.component.css","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/commons/configModel.ts","webpack:///./src/app/commons/configServiceFactory.ts","webpack:///./src/app/index.ts","webpack:///./src/app/job/job.component.ts","webpack:///./src/app/jobs-basic-view-menu-config/jobsBasicViewMenuConfig.component.ts","webpack:///./src/app/jobs-basic-view-menu-config/jobsBasicViewMenuConfig.model.ts","webpack:///./src/app/jobs-basic-view/jobsBasicView.component.ts","webpack:///./src/app/jobs-basic-view/jobsBasicViewConfig.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/job/job.component.html","webpack:///./src/app/jobs-basic-view-menu-config/jobsBasicViewMenuConfig.component.html","webpack:///./src/app/jobs-basic-view/jobsBasicView.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["/**\r\n * Created by frdiaz on 02/12/2016.\r\n */\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions } from \"@angular/http\";\r\nimport 'rxjs/Rx';\r\nimport {ConfigService} from \"./configService\";\r\nimport {Job} from \"../job/job.model\";\r\nimport {JobsGroup} from \"../job/jobsGroup.model\";\r\nimport {SimpleJob} from \"../job/simpleJob.model\";\r\nimport {JobsBasicViewModel} from \"../jobs-basic-view/jobsBasicView.model\";\r\n\r\n@Injectable()\r\nexport class JenkinsService {\r\n\r\n  private headers = new Headers({});\r\n  private static readonly endJobsDataUrl: string = \"api/json?tree=jobs[name,url,buildable,lastBuild[*,actions[parameters[*]]]]\";\r\n  private static readonly endViewsUrl: string = \"api/json?tree=views[url,name],primaryView[url,name]\";\r\n  private invokedUrl: string;\r\n  private resquestOptions: RequestOptions;\r\n  private jobsGroupsFinded= {};\r\n  private jobsGroupsNamesList: string[] = [];\r\n\r\n  constructor(private http: Http, private configService: ConfigService){}\r\n\r\n  /**\r\n   * Configures headers to invoke the server\r\n   * @param authentication\r\n   */\r\n  configHeaders(authentication: boolean){\r\n    if(authentication){\r\n      console.log(\"With authentication\");\r\n      //this.headers.append(\"Access-Control-Allow-Credentials\", \"true\");\r\n      this.headers.append(\"Authorization\", \"Basic \" + btoa(this.configService.getUser() + \":\" + this.configService.getPass()));\r\n    }\r\n    this.headers.append(\"Content-Type\",\"application/json\");\r\n    this.resquestOptions = new RequestOptions({\r\n      headers: this.headers,\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Retrieves the exists views in Jenkins\r\n   * @param urlJenkins\r\n   * @returns {Observable<R>}\r\n   */\r\n  getViews(urlJenkins:string){\r\n\r\n    let invokeUrl = (urlJenkins !== null && urlJenkins !== undefined) ? urlJenkins : this.configService.getJenkinsUrl();\r\n    invokeUrl = invokeUrl  + JenkinsService.endViewsUrl;\r\n    this.configHeaders((urlJenkins === null || urlJenkins === undefined));\r\n\r\n    return this.http.post(invokeUrl, undefined, this.resquestOptions)\r\n      .map(response => response.json());\r\n  }\r\n\r\n  transformToJovViews(response: Response){\r\n    let jobViews : JobsBasicViewModel[] = [];\r\n\r\n    for(let view of response.json().views){\r\n      jobViews.push(new JobsBasicViewModel(view.url, view.name));\r\n    }\r\n\r\n    return jobViews;\r\n  }\r\n\r\n  /**\r\n   * Starts retrieving and formatting process of the Jobs State Data.\r\n   * @param urlFolderOfJobs\r\n   * @returns {Observable<R>}\r\n   */\r\n  getJobsStatus(urlFolderOfJobs:string){\r\n    this.jobsGroupsFinded = {};\r\n    this.jobsGroupsNamesList = [];\r\n\r\n    if(urlFolderOfJobs === undefined){\r\n      this.invokedUrl = this.configService.getJenkinsUrl()  + JenkinsService.endJobsDataUrl;\r\n    }else{\r\n      this.invokedUrl = urlFolderOfJobs + JenkinsService.endJobsDataUrl;\r\n    }\r\n\r\n    return this.http.post(this.invokedUrl, undefined, this.resquestOptions)\r\n      .map(response => this.createJobData(response.json().jobs))\r\n  }\r\n\r\n  /**\r\n   * Converts backend Jobs Objects in to frontend Jobs Objects\r\n   * @param jobs\r\n   */\r\n  createJobData(jobs: any[]){\r\n\r\n    let jobModelAux: Job[] = [];\r\n\r\n    for(let job of jobs){\r\n      if(job !== null){\r\n        if(job.buildable === undefined){\r\n          this.getJobsStatus(job.url);\r\n        }else {\r\n          if (job.lastBuild !== null) {\r\n              this.addJobToAGroup(job);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    for(let group of this.jobsGroupsNamesList){\r\n      if (group === \"reminder\" || this.jobsGroupsFinded[group].length === 0){\r\n        for (let job of this.jobsGroupsFinded[group]){\r\n          let jobModel = new SimpleJob(job);\r\n          jobModel.setStatusClass();\r\n          jobModelAux.push((jobModel));\r\n        }\r\n      }else{\r\n        let principalJobModel: JobsGroup = new JobsGroup();\r\n        principalJobModel.name = group;\r\n        for (let job of this.jobsGroupsFinded[group]){\r\n          let jobModel = new SimpleJob(job);\r\n          jobModel.setStatusClass();\r\n          if (jobModel.result !==\"SUCCESS\"){\r\n            principalJobModel.result = jobModel.result;\r\n            console.log(\"RESULTADO GROUP JOB\"+ principalJobModel.result);\r\n          }\r\n          principalJobModel.jobsList.push(jobModel);\r\n        }\r\n        principalJobModel.setStatusClass();\r\n        jobModelAux.push((principalJobModel));\r\n      }\r\n    }\r\n    return jobModelAux;\r\n\r\n  }\r\n\r\n  /**\r\n   * Adds the job to the correct group, according to a job's parameter.\r\n   * @param job\r\n   */\r\n  addJobToAGroup(job: any){\r\n    for( let action of job.lastBuild.actions) {\r\n      if (action._class === undefined || action._class === 'hudson.model.ParametersAction') {\r\n\r\n        if (action.parameters !== undefined) {\r\n          for (let i = 0; i < action.parameters.length; i++) {\r\n            if (action.parameters[i].name === 'Jobs_Group') {\r\n              if (this.jobsGroupsFinded[action.parameters[i].value] !== undefined) {\r\n                this.jobsGroupsFinded[action.parameters[i].value].push(job);\r\n              } else {\r\n                this.jobsGroupsNamesList.push(action.parameters[i].value);\r\n                this.jobsGroupsFinded[action.parameters[i].value] = [job];\r\n              }\r\n              break;\r\n            } else {\r\n              if (i === action.parameters.length - 1) {\r\n                if (this.jobsGroupsFinded[\"reminder\"] !== undefined) {\r\n                  this.jobsGroupsFinded[\"reminder\"].push(job);\r\n                } else {\r\n                  this.jobsGroupsNamesList.push(\"reminder\");\r\n                  this.jobsGroupsFinded[\"reminder\"] = [job\r\n                  ];\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }else{\r\n          if (this.jobsGroupsFinded[\"reminder\"] !== undefined) {\r\n            this.jobsGroupsFinded[\"reminder\"].push(job);\r\n          } else {\r\n            this.jobsGroupsNamesList.push(\"reminder\");\r\n            this.jobsGroupsFinded[\"reminder\"] = [job];\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  submitForm(){\r\n    console.log(\"Sends form to the Server\");\r\n    this.http.post(\"http://localhost:8080/jenkins/monitor-pro/prove\",undefined, undefined);\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/commons/jenkinsService.service.ts","/**\r\n * Created by frdiaz on 30/12/2016.\r\n */\r\nexport abstract class Job{\r\n\r\n  private _name:string;\r\n  public result: string;\r\n  public statusClass: string = \"basic project widget unknown\";\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  set name(value: string) {\r\n    this._name = value;\r\n  }\r\n\r\n  /**\r\n   * Changes the value of the statusClass attribute to set the Job's style class\r\n   */\r\n  setStatusClass(){\r\n    switch (this.result){\r\n      case \"SUCCESS\":\r\n        this.statusClass = \"successful\";\r\n        break;\r\n      case \"FAILURE\":\r\n        this.statusClass = \"failing\";\r\n        break;\r\n      case \"UNSTABLE\":\r\n        this.statusClass = \"unstable\";\r\n        break;\r\n      case \"ABORTED\":\r\n        this.statusClass = \"aborted\";\r\n        break;\r\n      case \"DISABLED\":\r\n        this.statusClass = \"disabled\";\r\n        break;\r\n      default:\r\n        this.statusClass = \"unknown\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a map with the jobs's styles classes\r\n   * @returns {{basic: boolean, project: boolean, widget: boolean, unknown: boolean, failing: boolean, successful: boolean, unstable: boolean, aborted: boolean, disabled: boolean}}\r\n   */\r\n  getClasses(){\r\n    return {\r\n      basic: true,\r\n      project: true,\r\n      widget: true,\r\n      unknown: this.statusClass === \"unknown\",\r\n      failing: this.statusClass === \"failing\",\r\n      successful: this.statusClass === \"successful\",\r\n      unstable: this.statusClass === \"unstable\",\r\n      aborted: this.statusClass === \"aborted\",\r\n      disabled: this.statusClass === \"disabled\"\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job/job.model.ts","import {Component, ElementRef} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent{\n  title = 'Monitor Pro v0.1';\n  urlJenkins: string = \"http://localhost:8080/\"; //by default\n\n  constructor(elm: ElementRef){\n    this.urlJenkins = elm.nativeElement.getAttribute(\"urlJenkins\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {Injectable} from \"@angular/core\";\r\nimport {Http, Response} from \"@angular/http\";\r\nimport {ConfigModel} from \"./configModel\";\r\nimport {isNullOrUndefined} from \"util\";\r\n/**\r\n * Created by frdiaz on 07/01/2017.\r\n */\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n\r\n private configModel: ConfigModel;\r\n\r\n  constructor(private http: Http){\r\n    //this.configModel = new ConfigModel();\r\n  }\r\n\r\n  /**\r\n   * Load security configuration data from file\r\n   * @returns {Promise<T>}\r\n   */\r\n  load(){\r\n    console.log(window.location.toString());\r\n    let rootUrl:string = window.location.pathname;\r\n      return new Promise((resolve, reject) => {\r\n        this.http.get(rootUrl+'assets/securityConfig.json')\r\n          .map(res => res.json())\r\n            .catch((error: any): any => {\r\n              console.log(\"Deployed as plugin.\");\r\n              resolve();\r\n        })\r\n          .subscribe(data => {\r\n            //Application run as standalone app\r\n            this.fillConfigModel(data);\r\n            resolve();\r\n          });\r\n      });\r\n  }\r\n\r\n  /**removeMonitorProFromPath(){\r\n    let url:string = window.location.pathname;\r\n    if (url.indexOf(\"monitor-pro\") > -1){\r\n      url=url.slice(0,url.indexOf(\"monitor-pro\"));\r\n    }\r\n    return url;\r\n  }*/\r\n  fillConfigModel(res: any){\r\n    if( !isNullOrUndefined(res)) {\r\n      this.configModel = new ConfigModel(res.user, res.pass, res.jenkinsUrl);\r\n    }\r\n    return this.configModel;\r\n  }\r\n\r\n  getUser(){\r\n    return this.configModel.user;\r\n  }\r\n\r\n  getPass(){\r\n    return this.configModel.pass;\r\n  }\r\n  getJenkinsUrl(){\r\n    return this.configModel.jenkinsUrl;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/commons/configService.ts","import {Job} from \"./job.model\";\r\n\r\nimport {SimpleJob} from \"./simpleJob.model\";\r\n/**\r\n * Created by frdiaz on 30/12/2016.\r\n */\r\nexport class JobsGroup extends Job {\r\n\r\n  public jobsList: SimpleJob[];\r\n\r\n  constructor(){\r\n    super();\r\n    this.jobsList = [];\r\n    this.result = \"SUCCESS\";\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job/jobsGroup.model.ts","import {Job} from \"./job.model\";\r\n/**\r\n * Created by frdiaz on 14/12/2016.\r\n */\r\n\r\nexport class SimpleJob extends Job{\r\n\r\n  public urlJobExecution: string;\r\n  public lastExecTime: number;\r\n  public displayLastExecNumber: string;\r\n  public timestamp: Date;\r\n  public urlJob: string;\r\n\r\n  constructor(jobData: any){\r\n    super();\r\n    this.name = jobData.name;\r\n    this.urlJob = jobData.url;\r\n    this.urlJobExecution = jobData.lastBuild.url;\r\n    this.lastExecTime = jobData.lastBuild.duration;\r\n    this.result = jobData.lastBuild.result;\r\n    this.timestamp = new Date(jobData.lastBuild.timestamp);\r\n    this.displayLastExecNumber = jobData.lastBuild.displayName;\r\n\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job/simpleJob.model.ts","/**\r\n * Created by frdiaz on 18/12/2016.\r\n */\r\nexport class JobsBasicViewModel{\r\n\r\n  constructor(public url:string, public name:string){}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs-basic-view/jobsBasicView.model.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".job {\\r\\n  margin: 10px 10px 10px 10px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 379\n// module chunks = 0","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 412;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 412\n// module chunks = 0","import './polyfills.ts';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, JsonpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { JobsBasicViewComponent } from './jobs-basic-view/jobsBasicView.component';\nimport { JenkinsService } from './commons/jenkinsService.service';\nimport { JobComponent } from './job/job.component';\nimport {JobsBasicViewMenConfComponent} from \"./jobs-basic-view-menu-config/jobsBasicViewMenuConfig.component\";\nimport {ConfigService} from \"./commons/configService\";\nimport { configServiceFactory } from \"./commons/configServiceFactory\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JobsBasicViewComponent,\n    JobComponent,\n    JobsBasicViewMenConfComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    JsonpModule\n  ],\n  providers: [\n    ConfigService, {\n      provide: APP_INITIALIZER, useFactory: configServiceFactory,\n      deps: [ConfigService], multi: true\n    },\n    JenkinsService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","/**\r\n * Created by frdiaz on 08/01/2017.\r\n */\r\n\r\nexport class ConfigModel {\r\n\r\n  constructor(public user:string, public pass:string, public jenkinsUrl:string){}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/commons/configModel.ts","/**\r\n * Created by frdiaz on 10/02/2017.\r\n */\r\n\r\nimport { ConfigService } from \"./configService\";\r\n\r\nexport function configServiceFactory(configurationService: ConfigService) {\r\n  return () => configurationService.load();\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/commons/configServiceFactory.ts","export * from './app.component';\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.ts","/**\r\n * Created by frdiaz on 12/12/2016.\r\n */\r\nimport {Component, Input, OnInit} from \"@angular/core\";\r\nimport { SimpleJob } from \"./simpleJob.model\";\r\nimport {Job} from \"./job.model\";\r\nimport {JobsGroup} from \"./jobsGroup.model\";\r\n\r\n@Component({\r\n  selector: \"job\",\r\n  templateUrl: \"./job.component.html\"\r\n})\r\n\r\nexport class JobComponent implements OnInit{\r\n\r\n  @Input()\r\n  private jobModel: Job;\r\n\r\n  calculateProgres(){\r\n  }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  isSimpleJob(job:Job){\r\n    if (job instanceof SimpleJob){\r\n      return true;\r\n    }else if(job instanceof JobsGroup){\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/job/job.component.ts","/**\r\n * Created by frdiaz on 20/12/2016.\r\n */\r\nimport {Component, Output, EventEmitter, Input, OnInit} from '@angular/core';\r\nimport { JobsBasicViewMenuConfig } from './jobsBasicViewMenuConfig.model';\r\nimport {JenkinsService} from \"../commons/jenkinsService.service\";\r\nimport {JobsBasicViewModel} from \"../jobs-basic-view/jobsBasicView.model\";\r\n\r\n@Component({\r\n  selector: 'menu-config',\r\n  templateUrl: './jobsBasicViewMenuConfig.component.html'\r\n})\r\n\r\nexport class JobsBasicViewMenConfComponent implements OnInit {\r\n\r\n  viewConfig: JobsBasicViewMenuConfig;\r\n  toggleSettings: boolean = false;\r\n\r\n  @Input()\r\n  private urlJenkins: string;\r\n\r\n  @Output()\r\n  onSelectedView = new EventEmitter<JobsBasicViewModel>();\r\n\r\n  @Output()\r\n  onSelectNumColumn = new EventEmitter<number>();\r\n\r\n  @Output()\r\n  onSetPollingInterval = new EventEmitter<number>();\r\n\r\n  constructor(private jenkinsService: JenkinsService){}\r\n\r\n  /**\r\n   * Initialize the component. Load the initial configuration\r\n   */\r\n  ngOnInit(){\r\n    this.viewConfig = new JobsBasicViewMenuConfig();\r\n\r\n    this.jenkinsService.getViews(this.urlJenkins).subscribe(\r\n      views => {\r\n        for(let view of views.views){\r\n          this.viewConfig.views.push(view);\r\n          if (view.name === views.primaryView.name){\r\n            this.viewConfig.jobsViewSelected = view;\r\n          }\r\n        }\r\n        this.onSelectedView.next(this.viewConfig.jobsViewSelected);\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  loadViewSelected(){\r\n    this.onSelectedView.next(this.viewConfig.jobsViewSelected);\r\n  }\r\n\r\n  setColumnsLayout(){\r\n    this.onSelectNumColumn.next(this.viewConfig.numColSelected);\r\n  }\r\n\r\n  onSubmit(){\r\n    this.jenkinsService.submitForm();\r\n    this.onSetPollingInterval.next(this.viewConfig.pollingInterval);\r\n    console.log(\"Change value of polling: \"+ this.viewConfig.pollingInterval);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs-basic-view-menu-config/jobsBasicViewMenuConfig.component.ts","import {JobsBasicViewModel} from \"../jobs-basic-view/jobsBasicView.model\";\r\n/**\r\n * Created by frdiaz on 15/12/2016.\r\n */\r\nexport class JobsBasicViewMenuConfig{\r\n\r\n  views: JobsBasicViewModel[] = [];\r\n  jobsViewSelected: JobsBasicViewModel;\r\n  numColSelected: number = 1;\r\n  combNumColumns: number [] = [1,2,3,4,5,6,7,8];\r\n  pollingInterval: number = 5;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs-basic-view-menu-config/jobsBasicViewMenuConfig.model.ts","/**\r\n * Created by frdiaz on 02/12/2016.\r\n */\r\nimport {Component, Input, OnDestroy} from '@angular/core';\r\nimport { OnInit } from '@angular/core';\r\nimport { JobsBasicViewConfig } from './jobsBasicViewConfig';\r\nimport 'rxjs/Rx';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport {JenkinsService} from \"../commons/jenkinsService.service\";\r\nimport {Job} from \"../job/job.model\";\r\nimport {JobsBasicViewModel} from \"./jobsBasicView.model\";\r\nimport {Subscription} from \"rxjs/Subscription\";\r\n\r\n@Component({\r\n  selector: 'jobsBasicView',\r\n  templateUrl: 'jobsBasicView.component.html',\r\n  styleUrls: ['../app.component.css']\r\n})\r\n\r\nexport class JobsBasicViewComponent implements OnInit, OnDestroy{\r\n\r\n  @Input()\r\n  private urlJenkins:string;\r\n\r\n  private jobsModel: Job[] = [];\r\n  viewConfig: JobsBasicViewConfig;\r\n  jobsViewSelected: JobsBasicViewModel;\r\n  timer: Observable<number>;\r\n  subscription: Subscription;\r\n\r\n  constructor(private jenkinsService: JenkinsService){\r\n    this.jobsViewSelected = new JobsBasicViewModel(undefined, \"No view selected jet.\");\r\n  }\r\n\r\n  /**\r\n   * Initializes the component. Load the initial configuration\r\n   */\r\n  ngOnInit(){\r\n    this.viewConfig = new JobsBasicViewConfig();\r\n  }\r\n\r\n  ngOnDestroy(){\r\n    console.log(\"Llamada a ngOnDestroy.\");\r\n    if ( !this.subscription != null){\r\n      console.log(\"Llamada a ngOnDestroy.\");\r\n\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts load of jobs status\r\n   * @param url\r\n   */\r\n  public initLoadJobsStatus(url:string) {\r\n\r\n    this.jenkinsService.getJobsStatus(url).subscribe(\r\n      jobsModelAux => this.jobsModel = jobsModelAux,\r\n      error => console.log(\"Error retriving data\")\r\n    );\r\n\r\n    /* Starts the polling configuration */\r\n    if (this.subscription !== undefined){\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.timer = Observable.interval(this.viewConfig.pollingIntervalInMilSecond);\r\n    this.subscription = this.timer\r\n      .subscribe(() => {\r\n        this.jenkinsService.getJobsStatus(url).subscribe(\r\n          jobsModelAux => this.jobsModel = jobsModelAux,\r\n          error => console.log(\"Error retriving data\")\r\n        );\r\n    });\r\n    /* Ends the polling configuration */\r\n  }\r\n\r\n  /**\r\n   * Sets the number of columns to the view\r\n   */\r\n  setColumnsLayout(numColumnsSelected: number){\r\n    this.viewConfig.classColumn = \"columns-\"+ numColumnsSelected;\r\n  }\r\n\r\n  /**\r\n   * Loads data of selected view.\r\n   */\r\n  loadViewSelected(jobsViewSelected: JobsBasicViewModel){\r\n    this.initLoadJobsStatus(jobsViewSelected.url);\r\n    this.jobsViewSelected = jobsViewSelected;\r\n  }\r\n\r\n  /**\r\n   * Changes value of polling interval and data reload\r\n   */\r\n  setPollingInterval(pollingIntervalInSec: number){\r\n    this.viewConfig.pollingIntervalInMilSecond = pollingIntervalInSec * 1000;\r\n    this.initLoadJobsStatus(this.jobsViewSelected.url);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs-basic-view/jobsBasicView.component.ts","/**\r\n * Created by frdiaz on 15/12/2016.\r\n */\r\nexport class JobsBasicViewConfig{\r\n\r\n  classColumn: string = \"columns-1\";\r\n  pollingIntervalInMilSecond: number = 5000;\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/jobs-basic-view/jobsBasicViewConfig.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular and is loaded before the app.\n// You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n// If you need to support the browsers/features below, uncomment the import\n// and run `npm install import-name-here';\n// Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n\n// Needed for: IE9\n// import 'classlist.js';\n\n// Animations\n// Needed for: All but Chrome and Firefox, Not supported in IE9\n// import 'web-animations-js';\n\n// Date, currency, decimal and percent pipes\n// Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n// import 'intl';\n\n// NgClass on SVG elements\n// Needed for: IE10, IE11\n// import 'classlist.js';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"<header><h1>\\n  {{title}}\\n</h1>\\n</header>\\n\\n<jobsBasicView [urlJenkins]=\\\"urlJenkins\\\"></jobsBasicView>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 682\n// module chunks = 0","module.exports = \"<header>\\r\\n  <h2><a title=\\\"{{jobModel.name}}\\\" href=\\\"{{jobModel.urlJob}}\\\">{{jobModel.name}}</a></h2>\\r\\n</header>\\r\\n<div *ngIf=\\\"isSimpleJob(jobModel)\\\" name=\\\"simpleJob\\\" class=\\\"slots\\\">\\r\\n  <div class=\\\"slot-1\\\"><h2><label for=\\\"lastBuild\\\">Last Build:</label>\\r\\n    <a id=\\\"lastBuild\\\" href=\\\"{{jobModel.urlJobExecution}}\\\">{{jobModel.displayLastExecNumber}}</a></h2></div>\\r\\n  <div class=\\\"slot-2\\\">{{jobModel.timestamp | date:'short' }}</div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!isSimpleJob(jobModel)\\\" name=\\\"groupedJob\\\" class=\\\"slots\\\">\\r\\n\\r\\n  <div class=\\\"slot-3\\\"><h2><label for=\\\"configurations\\\">Builds:</label></h2></div>\\r\\n  <ul id=\\\"configurations\\\">\\r\\n    <template ngFor let-jobBuild [ngForOf]=\\\"jobModel.jobsList\\\">\\r\\n      <!--ul id=\\\"configurations\\\"-->\\r\\n      <!--<div name=\\\"SimpleJob\\\"-->\\r\\n        <li>\\r\\n          <div class=\\\"slot-1\\\">\\r\\n            <a name=\\\"build\\\" id=\\\"build\\\" href=\\\"{{jobBuild.urlJobExecution}}\\\"> Build:\\r\\n              {{jobBuild.displayLastExecNumber}} </a> | Job: {{jobBuild.name}} --> Result:\\r\\n            <span [ngSwitch]=\\\"jobBuild.result\\\">\\r\\n                  <span *ngSwitchCase=\\\"'SUCCESS'\\\"> - OK</span>\\r\\n                  <span *ngSwitchCase=\\\"'FAILURE'\\\"> - KO</span>\\r\\n                  <span *ngSwitchCase=\\\"'UNSTABLE'\\\"> - UN</span>\\r\\n                  <span *ngSwitchCase=\\\"'ABORTED'\\\"> - AB</span>\\r\\n                  <span *ngSwitchCase=\\\"'DISABLED'\\\"> - N/A</span>\\r\\n                  <span *ngSwitchDefault>-!</span>\\r\\n                </span>\\r\\n          </div>\\r\\n          <div name=\\\"OtherData\\\" class=\\\"slot-2\\\"> | {{jobBuild.timestamp | date:'short' }}</div>\\r\\n        </li>\\r\\n      <!--/div-->\\r\\n      <!--/ul-->\\r\\n    </template>\\r\\n  </ul>\\r\\n\\r\\n\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/job/job.component.html\n// module id = 683\n// module chunks = 0","module.exports = \"  <nav id=\\\"menuLateral\\\">\\r\\n    <section [class.showSettings]=\\\"toggleSettings\\\">\\r\\n      <input id=\\\"settings-toggle\\\" type=\\\"checkbox\\\" class=\\\"settings\\\" [(ngModel)]=\\\"toggleSettings\\\"/>\\r\\n      <label for=\\\"settings-toggle\\\" title=\\\"Configure Build Monitor Settings\\\">Settings</label>\\r\\n\\r\\n      <ul>\\r\\n        <li class=\\\"settings-option\\\">\\r\\n          <label for=\\\"combViewSelction\\\">Views:</label>\\r\\n          <select [(ngModel)]=\\\"viewConfig.jobsViewSelected\\\" class=\\\"form-control\\\" id=\\\"combViewSelction\\\" name=\\\"combViewSelction\\\" (ngModelChange)=\\\"loadViewSelected()\\\" >\\r\\n            <option *ngFor=\\\"let view of viewConfig.views\\\" [selected]=\\\"view.name == viewConfig.jobsViewSelected.name\\\" [disabled]=\\\"view.name == viewConfig.jobsViewSelected.name\\\" [ngValue]=\\\"view\\\">{{view.name}}</option>\\r\\n          </select>\\r\\n        </li>\\r\\n        <li class=\\\"settings-option\\\">\\r\\n          <label for=\\\"combNumColumns\\\">Maximun number of columns:</label>\\r\\n          <select [(ngModel)]=\\\"viewConfig.numColSelected\\\" class=\\\"form-control\\\" id=\\\"combNumColumns\\\" name=\\\"combNumColumns\\\" (change)=\\\"setColumnsLayout()\\\" >\\r\\n            <option *ngFor=\\\"let numColumn of viewConfig.combNumColumns\\\" [value]=\\\"numColumn\\\">{{numColumn}}</option>\\r\\n          </select>\\r\\n        </li>\\r\\n        <li class=\\\"settings-option\\\">\\r\\n          <form (ngSubmit)=\\\"onSubmit()\\\" action=\\\"http://localhost:8080/monitor-pro/prove\\\">\\r\\n            <label for=\\\"inputPollInterval\\\">Refresh interval (in seconds):</label>\\r\\n            <input type=\\\"number\\\" [(ngModel)]=\\\"viewConfig.pollingInterval\\\" id=\\\"inputPollInterval\\\" name=\\\"inputPollInterval\\\" min=\\\"1\\\" max=\\\"60\\\">\\r\\n            <input type=\\\"submit\\\">\\r\\n          </form>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </section>\\r\\n  </nav>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/jobs-basic-view-menu-config/jobsBasicViewMenuConfig.component.html\n// module id = 684\n// module chunks = 0","module.exports = \"<h2>View: {{jobsViewSelected.name}}</h2>\\r\\n<header>\\r\\n  <menu-config (onSelectedView)=\\\"loadViewSelected($event)\\\" (onSelectNumColumn)=\\\"setColumnsLayout($event)\\\" (onSetPollingInterval)=\\\"setPollingInterval($event)\\\"  [urlJenkins]=\\\"urlJenkins\\\">Configuration Menu</menu-config>\\r\\n</header>\\r\\n\\r\\n<div>\\r\\n  <!-- Jobs List -->\\r\\n  <ul id=\\\"widgets\\\" [class] = \\\"viewConfig.classColumn\\\">\\r\\n    <li *ngFor=\\\"let jobData of jobsModel\\\" [ngClass]=\\\"jobData.getClasses()\\\">\\r\\n      <job  [jobModel]=\\\"jobData\\\" ></job>\\r\\n    </li>\\r\\n  </ul>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/jobs-basic-view/jobsBasicView.component.html\n// module id = 685\n// module chunks = 0"],"sourceRoot":""}